a)MATCH (u{name:"Thomas"})-[:Sent]->(t)-[:Contains]->(h) MATCH (h)<-[:Contains]-(t2)-[:Mentions]->(u2) 
RETURN distinct(u2.name);

b) MATCH (n:User)
WITH collect(n) as nodes
UNWIND nodes as n
UNWIND nodes as m
WITH * WHERE n.name = "Jessica"
MATCH p=allShortestPaths((n)-[:Follows*1..12]->(m))
RETURN p, length(p) ORDER BY length(p) DESC LIMIT 1

c) MATCH (u1)<-[:Follows]-(u2) MATCH (u3)-[:Follows]->(u{name:"Jessica"}) 
WITH u1, count(distinct(u2)) as foll_num, count(distinct(u3)) as jess_num
WHERE foll_num > jess_num
RETURN u1.name;

d)MATCH (u1:User)
OPTIONAL MATCH (u1)<-[:Follows]-(u2) 
RETURN u1.name, count(u2) ORDER BY count(u2) ASC, u1.name ASC LIMIT 5

e)MATCH (u)-[:Sent]->(t)<-[:Sent]-(u2)
with u, count(DISTINCT(u2)) as retweet_num
RETURN u.name, retweet_num ORDER BY retweet_num DESC, u.name ASC LIMIT 5;

f) MATCH (t)-[:Contains]->(h{tag: "proud"}) WHERE SUBSTRING(t.text, 0, 2) = "we"
RETURN t.text;

k)MATCH (u{name:"Thomas"})-[:Sent]->(t)-[:Mentions]->(u2)
DETACH DELETE u2;
